/*
 * OutputView.java
 *
 * Created on June 21, 2002, 4:19 PM
 */

/*
 *              Argus Software Pty Ltd License Notice
 * 
 * The contents of this file are subject to the Argus Software Pty Ltd
 * License Version 1.0 (the "License"). You may not use this file except
 * in compliance with the License. A copy of the License is available at
 * http://www.argussoftware.net/license/license_agreement.html
 * 
 * The Original Code is argus. The Initial Developer of the Original
 * Code is Argus Software Pty Ltd, All Rights Reserved.
 */

package com.argus.io;

/**
 *
 * @author  valeri chibaev
 */

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;

public class PrintStreamView extends javax.swing.JPanel {

    private MyPrintStream printStream;
    
    private boolean printDate  = false;
    private long    lastCalled = 0;
    
    private boolean append = true;
    public boolean isAppend() { return append; }
    public void setAppend( boolean value ) { append = value; }
    
    /** Creates new form PrintStreamView */
    public PrintStreamView(String dest, boolean autoFlush) throws IOException {
        this( new File(dest), autoFlush, true );
    }
    public PrintStreamView(String dest, boolean autoFlush, boolean append) throws IOException {
        this( new File(dest), autoFlush );
    }

    public PrintStreamView(File dest, boolean autoFlush) throws IOException {
        this( dest, autoFlush, true );
    }
    public PrintStreamView(File dest, boolean autoFlush, boolean append) throws IOException {
        initComponents();
        jTextArea.setText("");
        
        try {
            if ( dest.exists() ) {
                try {
                    dest.delete();
                    dest.createNewFile();
                } catch (IOException e) {} // ignore, file is locked
                    
            } else {
                //File dir = dest.getParentFile();
                //if ( !dir.exists() )
                //    dir.mkdirs();
                dest.createNewFile();
                
            }
            
            //printStream = new MyPrintStream( new FileOutputStream( dest ), autoFlush );
            // bytes will be written to the end of the file
            printStream = new MyPrintStream( new FileOutputStream( dest.getCanonicalPath(), append ), autoFlush );
            
        } catch ( IOException e ) {
            jTextArea.setText( e.getMessage() );
            throw e;
        }
        
    }

    // e.g. for error stream
    //getTextArea().setForeground(java.awt.Color.red);
    //getTextArea().setFont(new java.awt.Font("Courier New", 0, 12));
    public javax.swing.JTextArea getTextArea() {
        return jTextArea;
    }
    
    public boolean isPrintDate() {
        return printDate;
    }
    public void setPrintDate( boolean value ) {
        printDate = value;
    }
    
    public PrintStream getPrintStream() { return printStream; }
    
    public void close() {
        printStream.close();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jScrollPane = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        jScrollPane.setAutoscrolls(true);
        jTextArea.setEditable(false);
        jTextArea.setForeground(java.awt.Color.green);
        jTextArea.setFont(new java.awt.Font("Courier New", 0, 12));
        jTextArea.setText("Privet Valerka");
        jTextArea.setBackground(java.awt.Color.black);
        jScrollPane.setViewportView(jTextArea);

        add(jScrollPane);

    }//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JScrollPane jScrollPane;
    // End of variables declaration//GEN-END:variables

    protected boolean printDate() {
        if ( !printDate )
            return false;
        
        long curCalled = System.currentTimeMillis();
        boolean print = curCalled - lastCalled > 1000L; // 1 sec
        if ( print )
            lastCalled = curCalled;
        return print;
    }
    
    private class MyPrintStream extends java.io.PrintStream {
        
        private static final int MIN = 8000; // ~100 lines
        private static final int MAX = 80000; // ~1000 lines
        
        private int size;
        
        public MyPrintStream( OutputStream out ) {
            super( out );
        }
        
        public MyPrintStream( OutputStream out, boolean autoFlush ) {
            super( out, autoFlush );
        }
        
        private void append( String s ) {
            
            if ( this.size > MAX ) {
                String tmp;
                try { tmp = jTextArea.getText( jTextArea.getText().length() - MIN, MIN ); }
                catch ( javax.swing.text.BadLocationException e ) { tmp = ""; }
                jTextArea.setText( tmp );
                size = MIN;
            }
            
            if ( append ) {
                jTextArea.append( s );
                size += s.length();
            } else {
                jTextArea.setText( s );
                size = s.length();
            }
            
        }
        
//        private void addMessage(String s) {
//            javax.swing.text.Document doc = jTextArea.getDocument();
//            try {
//                doc.insertString(doc.getLength(), s, null);
//                int length = doc.getLength() - MAX;
//                if (length > 0)
//                    doc.remove(0, length);
//            } catch (javax.swing.text.BadLocationException e) {}
//        }

        /************************************************************
         *      Override OutputStream methods
         ***********************************************************/
        /*
        public void write(int b) {
            super.write( b );
            
            append( "" + b );
        }
         */
        /*
        public void write(byte[] b) throws IOException {
            super.write( b );
            append( "" + b.toString() );
        }
        */
        //*   
        public void write(byte[] b, int off, int len) {
            if ( b.length == len ) {
                if ( printDate() ) {
                    String s = new java.util.Date().toString() + '\n';
                    byte[] bytes = s.getBytes();
                    super.write( bytes, 0, bytes.length ); // add twice ???
                    append( s );
                }
                super.write(b,off,len);
            } else {
                byte [] dest = new byte [len];
                System.arraycopy( b, off, dest, 0, len );
                
                try { write( dest ); }
                catch ( IOException e ) {}

                append( new String( dest ) );
            }
        }

        public void flush() {
            super.flush();
            jTextArea.setText("");
        }
   
        public void close() {
            super.close();
        }
        
    }
    
}
