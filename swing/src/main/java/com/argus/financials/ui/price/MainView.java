/*
 *              Argus Software Pty Ltd License Notice
 * 
 * The contents of this file are subject to the Argus Software Pty Ltd
 * License Version 1.0 (the "License"). You may not use this file except
 * in compliance with the License. A copy of the License is available at
 * http://www.argussoftware.net/license/license_agreement.html
 * 
 * The Original Code is argus. The Initial Developer of the Original
 * Code is Argus Software Pty Ltd, All Rights Reserved.
 */

package com.argus.financials.ui.price;

/**
 * <p>Title: </p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company: Argus Software Pty Ltd</p>
 * @author Valeri SHIBAEV
 * @author Last Updated By:   $Author: Valera $
 * @version                   $Revision: 1.1 $
 */

import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;

import javax.swing.ActionMap;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

import com.argus.swing.Hyperlink;
import com.argus.swing.Hyperlink.HyperlinkMouseListener;
import com.argus.swing.StatusBarPanel;
import com.argus.swing.plaf.MetalTheme;

public class MainView extends javax.swing.JFrame {

    private static final String [] CARDS = {
    	"Interest Rate",
    	"Known Income",
    };
    
    private CardLayout cl;
    private java.util.List cards;
    private int selectedCardID;
    
    //private _Model model;
    private ActionMap actionMap;
    
	/** Creates new form */
    public MainView() {
		
		/////////////////////////////////////////////////////////////////////
		// LookAndFeel class that implements the native systems look and feel if there is one,
		// otherwise the name of the default cross platform LookAndFeel class.
		//////////////////////////////////////////////////////////////////////
		try {
			javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme( new MetalTheme());
			UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
        
			//UIManager.setLookAndFeel( UIManager.getSystemLookAndFeelClassName() );
        
		} catch ( Exception ex ) { 
			ex.printStackTrace(); 
		}

        cards = new ArrayList();
        cards.add(new InterestRateView());
        cards.add(new KnownIncomeView());
        
        /////////////////////////
        initComponents();
        /////////////////////////
        //jPanel2.setVisible(false);
        statusBarPanel.setVisible(false);
        
		//setIconImage( Constants.IMAGE_ICON.getImage() );

		//setTitle(Constants.APP_TITLE);
		
		jLabelImage.setText("");
		//jLabelImage.setIcon( Constants.IMAGE_ICON );
        
        cl = (CardLayout) jPanelCenter.getLayout();
        
        for (int i = 0; i < cards.size(); i++) {
            String cardName = CARDS[i];
            jPanelCenter.add( cardName, (Component) cards.get(i) );
            
            JComponent link = new Hyperlink(cardName);
            link.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                	Component c = evt.getComponent();
                	
                    String cardName;
                    if (c instanceof JLabel) cardName = ( (JLabel) c).getText();
                    else if (c instanceof JTextField) cardName = ( (JTextField) c).getText();
                    else cardName = "???";
                    
                    for (int i = 0; i < CARDS.length; i++) {
                        if (CARDS[i].equals( cardName )) {
                            showCard(i);
                            break;
                        }
                    }
                    for (int i = 0; i < jPanelWest.getComponentCount(); i++) {
                    	Component c2 = jPanelWest.getComponent(i);
                    	if (c2 != c && c2 instanceof Hyperlink) {
                    		((Hyperlink) c2).reset();
                    	}
                    }
                }
            });
            link.addMouseListener(new HyperlinkMouseListener());
            jPanelWest.add( link );
        }
        
        showCard(selectedCardID = 0);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelNorth = new javax.swing.JPanel();
        jLabelInfo = new javax.swing.JLabel();
        jPanelCenter = new javax.swing.JPanel();
        jPanelSouth = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        statusBarPanel = new StatusBarPanel();
        jPanelWest = new javax.swing.JPanel();
        jLabelImage = new javax.swing.JLabel();

        setTitle("");
        jPanelNorth.setLayout(new javax.swing.BoxLayout(jPanelNorth, javax.swing.BoxLayout.X_AXIS));

        jLabelInfo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanelNorth.add(jLabelInfo);

        getContentPane().add(jPanelNorth, java.awt.BorderLayout.NORTH);

        jPanelCenter.setLayout(new java.awt.CardLayout());

        jPanelCenter.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10)));
        getContentPane().add(jPanelCenter, java.awt.BorderLayout.CENTER);

        jPanelSouth.setLayout(new javax.swing.BoxLayout(jPanelSouth, javax.swing.BoxLayout.Y_AXIS));

        jPanelSouth.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButtonPrev.setText("Previous");
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });

        jPanel2.add(jButtonPrev);

        jButtonNext.setText("Next");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        jPanel2.add(jButtonNext);

        jPanelSouth.add(jPanel2);

        jPanelSouth.add(statusBarPanel);

        getContentPane().add(jPanelSouth, java.awt.BorderLayout.SOUTH);

        jPanelWest.setLayout(new javax.swing.BoxLayout(jPanelWest, javax.swing.BoxLayout.Y_AXIS));

        jPanelWest.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabelImage.setText("Image here");
        jLabelImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImage.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 20, 5));
        jPanelWest.add(jLabelImage);

        getContentPane().add(jPanelWest, java.awt.BorderLayout.WEST);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-608)/2, (screenSize.height-434)/2, 608, 434);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        boolean allow = showCard(selectedCardID + 1);
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
        boolean allow = showCard(selectedCardID - 1);
    }//GEN-LAST:event_jButtonPrevActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
			//UIManager.setLookAndFeel( UIManager.getSystemLookAndFeelClassName() );
        	
            final MainView app = new MainView();

            app.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
//            app.addWindowListener(new java.awt.event.WindowAdapter() {
//                public void windowClosing(java.awt.event.WindowEvent evt) {
//                    Action action = (Action) app.actionMap.get(Constants.EXIT);
//                    action.actionPerformed( new ActionEvent(this, evt.getID(), Constants.EXIT ) );
//                }
//            });
            
//            app.setJMenuBar( new _MenuBar( app.actionMap ) );
            
            app.show();
        } catch (Exception ex) {
            ex.printStackTrace();
            System.exit(1);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelNorth;
    private javax.swing.JPanel jPanelSouth;
    private javax.swing.JPanel jPanelWest;
    private javax.swing.JPanel statusBarPanel;
    // End of variables declaration//GEN-END:variables

    private boolean showCard(int cardID) {
        boolean allow = cardID >= 0 && cardID < CARDS.length;
        if (allow) {
            selectedCardID = cardID;
            String cardName = CARDS[selectedCardID];
            cl.show( jPanelCenter, cardName );
            updateInfo();

            for (int i = 0; i < jPanelWest.getComponentCount(); i++) {
            	Component c = jPanelWest.getComponent(i);
            	if (c instanceof Hyperlink) {
            		Hyperlink link = ((Hyperlink) c); 
            		if (cardName.equals(link.getText())) link.doClick();
            		else link.reset();
            	}
            }
        }
        
        jButtonNext.setEnabled( selectedCardID < CARDS.length - 1 );
        jButtonPrev.setEnabled( selectedCardID > 0 );

        return allow;
    }

    private void updateInfo() {
        SwingUtilities.invokeLater( new Runnable() { public void run() {
            JComponent selected = (JComponent) cards.get( selectedCardID );
            jLabelInfo.setText(
                "<html>" +
                    selected.getToolTipText()
                + "</html>"
            );
        }});
    }
    
}
