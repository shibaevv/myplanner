/*
 * AddFinancialView.java
 *
 * Created on July 11, 2002, 4:03 PM
 */

package com.argus.financials.ui.financials;

import com.argus.financials.api.InvalidCodeException;
import com.argus.financials.api.service.FinancialService;

/**
 * 
 * @author valeri chibaev
 */

import com.argus.financials.bean.Assets;
import com.argus.financials.bean.Financial;
import com.argus.financials.bean.NegativeAmountException;
import com.argus.financials.bean.db.ObjectClass;
import com.argus.financials.code.OwnerCode;
import com.argus.financials.swing.SwingUtil;
import com.argus.format.Currency;
import com.argus.format.Number2;
import com.argus.format.Percent;
import com.argus.swing.SwingUtils;
import com.argus.util.DateTimeUtils;

public abstract class AddFinancialView extends javax.swing.JPanel implements
        com.argus.financials.ui.Viewable,
        com.argus.financials.api.code.FinancialClassID {

    protected static FinancialService financialService;
    public static void setFinancialService(FinancialService financialService) {
        AddFinancialView.financialService = financialService;
    }

    public static final int CANCEL_OPTION = javax.swing.JOptionPane.CANCEL_OPTION;
    public static final int OK_OPTION = javax.swing.JOptionPane.OK_OPTION;

    // controls dimentions
    // JTextField
    public static java.awt.Dimension DIM_MINIMUM = new java.awt.Dimension(100, 21);

    // JComboBox
    public static java.awt.Dimension DIM_MAXIMUM_CB = new java.awt.Dimension(
            (int) (SwingUtils.DIM_SCREEN.getWidth() * .8), 19);

    private static Number2 number = Number2.getNumberInstance();

    private static Number2 number4 = Number2.createInstance();
    static {
        number4.setMaximumFractionDigits(4);
        number4.setMinimumFractionDigits(4);
    }

    private static Percent percent = Percent.getPercentInstance();

    private static Currency currency = Currency.getCurrencyInstance();

    private static Currency currency4 = Currency.createCurrencyInstance();
    static {
        currency4.setMaximumFractionDigits(4);
        currency4.setMinimumFractionDigits(4);
    }

    public static Number2 getNumberInstance() {
        return number;
    }

    public static Number2 getNumberInstance4() {
        return number4;
    }

    public static Percent getPercentInstance() {
        return percent;
    }

    public static Currency getCurrencyInstance() {
        return currency;
    }

    public static Currency getCurrencyInstance4() {
        return currency4;
    }

    protected static final Object[] OWNERS = new Object[] { OwnerCode.NONE,
            "ClientView", "Partner", "Joint"
    // OwnerCode.CODE_NONE, OwnerCode.rcCLIENT, OwnerCode.rcPARTNER,
    // OwnerCode.rcJOINT
    };

    private Object object; // Financial

    private int result; // CANCEL_OPTION, OK_OPTION

    /** Creates new form AddFinancialView */
    protected AddFinancialView() {
        initComponents();
    }

    protected int getDefaultWidth() {
        return 500;
    }

    protected int getDefaultHeight() {
        return (int) (getDefaultWidth() / 1.618);
    }

    public static AddFinancialView getAddFinancialView(int objectTypeID) {

        switch (objectTypeID) {

        case iASSET_CASH:
            return AddAssetCashView.getInstance();
        case iASSET_INVESTMENT:
            return AddAssetInvestmentView.getInstance();
        case iASSET_PERSONAL:
            return AddAssetPersonalView.getInstance();
        case iASSET_SUPERANNUATION:
            return AddAssetSuperannuationView.getInstance();
        case iASSET_INCOME_STREAM:
            return AddIncomeStreamsView.getInstance();
        case iREGULAR_EXPENSE:
            return AddRegularExpenseView.getInstance();
        case iREGULAR_INCOME:
            return AddRegularIncomeView.getInstance();
        case iLIABILITY:
            return AddLiabilityView.getInstance();
        case iTAX_OFFSET:
            return AddTaxOffsetView.getInstance();
        default:
            return null;

        }

    }

    public void setAssets(Assets assets) {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {// GEN-BEGIN:initComponents
        jPanelDetails = new javax.swing.JPanel();
        jPanelControls = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanelDetails.setLayout(new javax.swing.BoxLayout(jPanelDetails,
                javax.swing.BoxLayout.Y_AXIS));

        jPanelDetails.setBorder(new javax.swing.border.EmptyBorder(
                new java.awt.Insets(10, 10, 0, 10)));
        add(jPanelDetails);

        jPanelControls.setLayout(new java.awt.FlowLayout(
                java.awt.FlowLayout.CENTER, 5, 15));

        jButtonOK.setText("OK");
        jButtonOK.setDefaultCapable(false);
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jPanelControls.add(jButtonOK);

        jButtonCancel.setText("Cancel");
        jButtonCancel.setDefaultCapable(false);
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanelControls.add(jButtonCancel);

        add(jPanelControls);

    }// GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_formComponentShown
        result = CANCEL_OPTION;
    }// GEN-LAST:event_formComponentShown

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonOKActionPerformed
        try {
            saveView();
            result = OK_OPTION;
            // do setObject(null) after modal closed

            setVisible(false);
        } catch (Exception e) {
            System.err.println(e.getMessage()); // no need to printStackTrace()
                                                // here
        }
    }// GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonCancelActionPerformed
        clearView();
        setObject(null);
        result = CANCEL_OPTION; // by default

        setVisible(false);
    }// GEN-LAST:event_jButtonCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;

    protected javax.swing.JPanel jPanelControls;

    private javax.swing.JButton jButtonOK;

    protected javax.swing.JPanel jPanelDetails;

    // End of variables declaration//GEN-END:variables

    public int getResult() {
        return result;
    }

    /*
     * // if derived class return not null - than new income will be generated
     * public GrowthRate getGrowthRate() { return null; }
     */

    /***************************************************************************
     * interface Viewable
     **************************************************************************/

    public Object getObject() {
        return object;
    }

    public void setObject(Object value) {
        object = value;
        updateView();
    }

    public Financial getFinancial() {
        if (getObject() == null)
            setObject(ObjectClass.createNewInstance(getObjectType()));
        return (Financial) getObject();
    }

    public void clearView() {
        SwingUtil.clear(this);
    }

    public abstract String getTitle();

    private java.awt.Window owner;

    public void setOwner(java.awt.Window owner) {
        this.owner = owner;
    }

    public void setVisible(boolean b) {
        // Frame owner, String title, boolean modal, Component comp, boolean
        // resizable, boolean visible ) {
        SwingUtil.add2Dialog((java.awt.Frame) owner, getTitle(), true, this,
                true, b);
    }

    public void pack() {
        SwingUtil.pack(this);
    }

    public abstract Integer getObjectType();

    /***************************************************************************
     * 
     **************************************************************************/
    protected void checkRequiredFields(boolean showMessage)
            throws InvalidCodeException {
    }

    protected String checkDateField(com.argus.bean.FDateChooser field,
            String name) {

        java.util.Date d = DateTimeUtils.getDate(field.getText());

        if (d != null && d.before(DateTimeUtils.MIN_MSSQL_DATE))
            return name + " is before minimum date: '"
                    + DateTimeUtils.sMIN_MSSQL_DATE + "'\n";

        if (d != null && d.after(DateTimeUtils.MAX_DATE))
            return name + " is after maximum date: '" + DateTimeUtils.sMAX_DATE
                    + "'\n";

        return "";

    }

    public boolean updateView() {
        result = CANCEL_OPTION;
        return true;
    }

    public abstract boolean saveView() throws InvalidCodeException,
            NegativeAmountException;

}
