/*
 * DataCollectionView.java
 *
 * Created on July 3, 2002, 10:33 AM
 */

package com.argus.financials.ui.strategy;

/**
 * 
 * @author valeri chibaev
 */

import java.awt.Frame;
import java.awt.Window;

import javax.swing.JList;
import javax.swing.JOptionPane;

import com.argus.financials.bean.Financial;
import com.argus.financials.service.ClientService;
import com.argus.financials.service.PersonService;
import com.argus.financials.service.ServiceLocator;
import com.argus.financials.strategy.StrategyFinancial;
import com.argus.financials.strategy.StrategyGroup;
import com.argus.financials.strategy.model.DataCollectionModel;
import com.argus.financials.strategy.model.DataRestructureModel;
import com.argus.financials.strategy.model.StrategyGroupData;
import com.argus.financials.swing.SwingUtil;
import com.argus.financials.ui.ListSelection;

public class DataCollectionRestructureView extends javax.swing.JPanel implements
        javax.swing.event.TreeSelectionListener, com.argus.financials.swing.IReset {

    private StrategyGroupData sgData;

    private DataCollectionView dataCollectionView;

    private DataRestructureView dataRestructureView;

    /** Creates new form DataCollectionView */
    public DataCollectionRestructureView() {
        initComponents();
        initComponents2();
    }

    public com.argus.format.Currency getCurrency() {
        return dataRestructureView.getCurrency();
    }

    private void initComponents2() {
        dataCollectionView = new DataCollectionView();
        dataCollectionView.setListener(this);
        jPanelLeft.add(dataCollectionView);

        // jPanelControls.add( dataCollectionView.getControlPanel() );

        dataRestructureView = new DataRestructureView();
        dataRestructureView.setListener(this);
        jPanelDestination.add(dataRestructureView);

        // jPanelControls.add( dataRestructureView.getControlPanel() );

    }

    // javax.swing.event.TreeSelectionListener
    public void valueChanged(
            javax.swing.event.TreeSelectionEvent treeSelectionEvent) {
        // System.out.println( "DataCollectionRestructureView::valueChanged()"
        // );
        updateControls();
        repaint();
    }

    private void updateControls() {
        DataCollectionModel.Node collectionNode = dataCollectionView
                .getCurrentCollectionNode();
        DataRestructureModel.Node2 restructureNode = dataRestructureView
                .getCurrentRestructureNode();

        int collectionCount = dataCollectionView.getSelectedNodeCount();
        int restructureCount = dataRestructureView.getSelectedNodeCount();

        DataRestructureModel model = dataRestructureView.model;
        if (model.isTransferCompleted())
            SwingUtil.setEnabled(jPanelRControls, false);
        else {
            jButtonAddFinancials.setEnabled(restructureNode != null
                    && restructureNode.isRecommendationSource()
                    && collectionCount > 0);
            jButtonRemoveFinancials.setEnabled(restructureCount > 0);
            jButtonTransferFinancials.setEnabled(true);
        }

        jButtonImplementStrategy.setEnabled(model.isTransferCompleted()
                && !model.isImplemented());
        jButtonRollbackStrategy.setEnabled(model.isImplemented()
                && !model.isRollbacked());
        // System.out.println( model.getStatusDesc() );

    }

    // //////////////////////////////////////////////////////////////////////////
    //
    // //////////////////////////////////////////////////////////////////////////
    public void reset() {
        dataCollectionView.reset();
        dataRestructureView.reset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {// GEN-BEGIN:initComponents
        jSplitPane = new javax.swing.JSplitPane();
        jPanelLeft = new javax.swing.JPanel();
        jPanelRight = new javax.swing.JPanel();
        jPanelRControls = new javax.swing.JPanel();
        jButtonAddFinancials = new javax.swing.JButton();
        jButtonRemoveFinancials = new javax.swing.JButton();
        jButtonTransferFinancials = new javax.swing.JButton();
        jPanelDestination = new javax.swing.JPanel();
        jPanelImplRollback = new javax.swing.JPanel();
        jButtonImplementStrategy = new javax.swing.JButton();
        jButtonRollbackStrategy = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        setBorder(new javax.swing.border.EtchedBorder());
        jSplitPane.setDividerLocation(150);
        jSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jPanelLeft.setLayout(new javax.swing.BoxLayout(jPanelLeft,
                javax.swing.BoxLayout.X_AXIS));

        jPanelLeft.setBorder(new javax.swing.border.TitledBorder(
                "Source of Funds (Current Financials)"));
        jSplitPane.setLeftComponent(jPanelLeft);

        jPanelRight.setLayout(new javax.swing.BoxLayout(jPanelRight,
                javax.swing.BoxLayout.Y_AXIS));

        jButtonAddFinancials.setIcon(new javax.swing.ImageIcon(getClass()
                .getResource("/image/Import16.gif")));
        jButtonAddFinancials.setToolTipText("Add Financial(s)");
        jButtonAddFinancials.setText("Move Financial Item(s)");
        jButtonAddFinancials.setDefaultCapable(false);
        jButtonAddFinancials
                .addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonAddFinancialsActionPerformed(evt);
                    }
                });

        jPanelRControls.add(jButtonAddFinancials);

        jButtonRemoveFinancials.setIcon(new javax.swing.ImageIcon(getClass()
                .getResource("/image/Export16.gif")));
        jButtonRemoveFinancials.setToolTipText("Remove Financial(s)");
        jButtonRemoveFinancials.setText("Remove Financial Item(s)");
        jButtonRemoveFinancials.setDefaultCapable(false);
        jButtonRemoveFinancials
                .addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonRemoveFinancialsActionPerformed(evt);
                    }
                });

        jPanelRControls.add(jButtonRemoveFinancials);

        jButtonTransferFinancials.setText("Transfer All Remaining Financials");
        jButtonTransferFinancials
                .addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonTransferFinancialsActionPerformed(evt);
                    }
                });

        jPanelRControls.add(jButtonTransferFinancials);

        jPanelRight.add(jPanelRControls);

        jPanelDestination.setLayout(new java.awt.BorderLayout());

        jPanelDestination.setBorder(new javax.swing.border.TitledBorder(
                "Application of Funds"));
        jPanelRight.add(jPanelDestination);

        jButtonImplementStrategy.setText("Implement Strategy");
        jButtonImplementStrategy
                .addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonImplementStrategyActionPerformed(evt);
                    }
                });

        jPanelImplRollback.add(jButtonImplementStrategy);

        jButtonRollbackStrategy.setText("Rollback Strategy");
        jButtonRollbackStrategy
                .addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonRollbackStrategyActionPerformed(evt);
                    }
                });

        jPanelImplRollback.add(jButtonRollbackStrategy);

        jPanelRight.add(jPanelImplRollback);

        jSplitPane.setRightComponent(jPanelRight);

        add(jSplitPane, java.awt.BorderLayout.CENTER);

    }// GEN-END:initComponents

    private void jButtonRollbackStrategyActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonRollbackStrategyActionPerformed
        doRollbackStrategy();
    }// GEN-LAST:event_jButtonRollbackStrategyActionPerformed

    private void jButtonImplementStrategyActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonImplementStrategyActionPerformed
        doImplementStrategy();
    }// GEN-LAST:event_jButtonImplementStrategyActionPerformed

    private void jButtonTransferFinancialsActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonTransferFinancialsActionPerformed
        doTransferFinancials();
    }// GEN-LAST:event_jButtonTransferFinancialsActionPerformed

    private void jButtonRemoveFinancialsActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonRemoveFinancialsActionPerformed
        doRemoveFinancials();
    }// GEN-LAST:event_jButtonRemoveFinancialsActionPerformed

    private void jButtonAddFinancialsActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonAddFinancialsActionPerformed
        doAddFinancials();
    }// GEN-LAST:event_jButtonAddFinancialsActionPerformed

    javax.swing.JPanel getPanelImplRollback() {
        return jPanelImplRollback;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRollbackStrategy;

    private javax.swing.JButton jButtonAddFinancials;

    private javax.swing.JButton jButtonRemoveFinancials;

    private javax.swing.JPanel jPanelRight;

    private javax.swing.JSplitPane jSplitPane;

    private javax.swing.JPanel jPanelDestination;

    private javax.swing.JPanel jPanelRControls;

    private javax.swing.JButton jButtonImplementStrategy;

    private javax.swing.JPanel jPanelImplRollback;

    private javax.swing.JPanel jPanelLeft;

    private javax.swing.JButton jButtonTransferFinancials;

    // End of variables declaration//GEN-END:variables

    private int getSelectedNodeCount(DataCollectionModel model) {
        java.util.Collection c = getSelectedNodes(model);
        return c == null ? 0 : c.size();
    }

    private java.util.Collection getSelectedNodes(DataCollectionModel model) {
        return model.getChildren(Boolean.TRUE);
    }

    // add children from collectionModel to restructureModel
    private void addFinancials(DataRestructureModel.Node2 dest,
            java.util.Collection nodes) {
        if (nodes == null || dest == null || dest.isLeaf())
            return;

        java.util.Iterator iter = nodes.iterator();
        while (iter.hasNext()) {
            DataCollectionModel.Node1 node = (DataCollectionModel.Node1) iter
                    .next();
            Financial f = node.getFinancialObject();
            if (f.getUsedAmount() != null) {

                StrategyFinancial sf = new StrategyFinancial(f);
                sf.setAmount(f.getUsedAmount());

                dest.addChild(sf).nodeChanged();

            }

            node.setSelected(false);

        }

        repaint();

    }

    // remove node from restructureModel
    private void removeFinancials(java.util.Collection nodes) {
        if (nodes == null)
            return;

        java.util.Iterator iter = nodes.iterator();
        while (iter.hasNext()) {
            DataRestructureModel.Node2 node = (DataRestructureModel.Node2) iter
                    .next();
            Financial f = node.getFinancialObject();
            StrategyFinancial sf = node.getStrategyFinancialObject();

            if (sf != null)
                // put it back
                sf.setAmount((java.math.BigDecimal) null);
            // f.updatePoolBalanceAmount( sf.getAmount( true ) );

            node.setSelected(false);
            node.remove();

        }

        repaint();

    }

    /***************************************************************************
     * 
     **************************************************************************/
    public void updateView(PersonService person) throws java.io.IOException {

        StrategyGroup strategy = getSelectedStrategyGroup((ClientService) person);
        if (strategy == null)
            throw new java.io.IOException("Operation canceled by user.");

        try {
            sgData = strategy.getStrategyGroupData();
            if (sgData == null)
                sgData = new StrategyGroupData();
            // System.out.println( "=====> Selected Strategy: " + strategy );

            // 1. load financial data
            dataCollectionView.updateView(person, sgData);

            // 2. load client saved strategies models
            dataRestructureView.updateView(person, sgData);

            updateControls();

        } catch (java.io.IOException e) {
            e.printStackTrace(System.err);
            throw e;
        }

    }

    public void saveView(PersonService person) throws com.argus.financials.service.ServiceException {

        // if ( sgData == null )
        // sgData = new StrategyGroupData();
        sgData.setCollectionModel(dataCollectionView.model);
        sgData.setRestructureModel(dataRestructureView.model);

        DataRestructureModel.Node2 rootNode = (DataRestructureModel.Node2) dataRestructureView.model
                .getRoot();
        StrategyGroup strategy = getStrategy();

        if (strategy == null || strategy == StrategyGroup.DEFAULT_ROOT) { // new
                                                                            // strategy
                                                                            // (has
                                                                            // to
                                                                            // be
                                                                            // saved)
            String strategyGroupTitle = JOptionPane.showInputDialog(this,
                    "Do You want to change Strategy Title?\n" + strategy,
                    "Change Strategy Title Dialog",
                    JOptionPane.QUESTION_MESSAGE);

            if (strategyGroupTitle == null
                    || strategyGroupTitle.trim().length() == 0)
                return;

            strategyGroupTitle = strategyGroupTitle.trim();
            if (strategyGroupTitle.length() > 64)
                strategyGroupTitle = strategyGroupTitle.substring(0, 64);

            strategy = new StrategyGroup();
            strategy.setStrategyGroupDesc(strategyGroupTitle);

            rootNode.setObject(strategy);

        }

        strategy.setStrategyGroupData(sgData);
        ((ClientService) person).storeStrategy(strategy);

        dataRestructureView.repaint();

    }

    private void doRemoveFinancials() {
        removeFinancials(dataRestructureView.getSelectedNodes());
        updateControls();
    }

    private void doAddFinancials() {
        DataRestructureModel.Node2 restructureNode = dataRestructureView
                .getCurrentRestructureNode();
        dataRestructureView.expandPath();
        addFinancials(restructureNode, dataCollectionView.getSelectedNodes());
        updateControls();
    }

    public void doTransferFinancials() {
        // heavy warning
        if (JOptionPane.showConfirmDialog(this,
                "Do you really want to Transfer Financials ?",
                "Transfer Financials Dialog", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) != JOptionPane.YES_OPTION)
            return;

        DataRestructureModel model = dataRestructureView.model;

        // reset restructured assets
        model.getAssets().initCodes(null);
        dataRestructureView.addFinancials(dataCollectionView.getFinancials());
        // dataRestructureView.addFinancials( dataCollectionView.getFinancials(
        // Boolean.FALSE ) );

        model.setTransferCompleted();

        dataCollectionView.updateTotal();

        updateControls();

    }

    // //////////////////////////////////////////////////////////////////////////
    //
    // //////////////////////////////////////////////////////////////////////////
    public StrategyGroup getStrategy() {
        DataRestructureModel.Node2 rootNode = (DataRestructureModel.Node2) dataRestructureView.model
                .getRoot();
        return (StrategyGroup) rootNode.getObject();
    }

    public StrategyGroupData getStrategyGroupData() throws java.io.IOException {
        return getStrategy().getStrategyGroupData();
    }

    // //////////////////////////////////////////////////////////////////////////
    //
    // //////////////////////////////////////////////////////////////////////////
    void doDeleteStrategy() {

        if (JOptionPane.showConfirmDialog(this,
                "Do You want to delete this strategy?\n" + getStrategy(),
                "Delete Strategy Dialog", JOptionPane.YES_NO_OPTION) != JOptionPane.YES_OPTION)
            return;

        try {
            ServiceLocator.getInstance().getClientPerson().deleteStrategy(
                    getStrategy());
            SwingUtil.setVisible(this, false);
        } catch (com.argus.financials.service.ServiceException e) {
            e.printStackTrace(System.err);
        }

    }

    private void doImplementStrategy() {

        if (JOptionPane.showConfirmDialog(this,
                "Do you really want to Implement Strategy?\n" + getStrategy(),
                "Implement Strategy Dialog", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            try {
                ClientService cp = ServiceLocator.getInstance()
                        .getClientPerson();

                cp.implementStrategy(getStrategy());
                if (!dataRestructureView.model.setImplemented())
                    System.err.println("FAILED to set IMPLEMENTED flag on "
                            + getStrategy());

                saveView(cp);

                SwingUtil.setVisible(this, false);

            } catch (com.argus.financials.service.ServiceException e) {
                e.printStackTrace(System.err);
            }

        }

        updateControls();

    }

    private void doRollbackStrategy() {

        if (JOptionPane.showConfirmDialog(this,
                "Do you really want to Rollback Strategy?\n" + getStrategy(),
                "Rollback Strategy Dialog", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            try {
                ClientService cp = ServiceLocator.getInstance()
                        .getClientPerson();

                cp.rollbackStrategy(getStrategy());
                if (!dataRestructureView.model.setRollbacked())
                    System.err.println("FAILED to set ROLLBACKED flag on "
                            + getStrategy());

                saveView(cp);

                SwingUtil.setVisible(this, false);

            } catch (com.argus.financials.service.ServiceException e) {
                e.printStackTrace(System.err);
            }

        }

        updateControls();

    }

    private StrategyGroup getSelectedStrategyGroup(ClientService clientPerson)
            throws com.argus.financials.service.ServiceException {

        java.util.Collection set = clientPerson.getStrategies();
        if (set == null || set.size() == 0)
            return StrategyGroup.DEFAULT_ROOT;

        java.util.Vector items = new java.util.Vector(set);
        items.add(0, StrategyGroup.DEFAULT_ROOT);

        ListSelection listSelection = new ListSelection(new JList());
        listSelection.setSingleSelection();
        listSelection.setListData(items);

        Window w = com.argus.financials.ui.FinancialPlannerApp.getInstance(); // SwingUtilities.getWindowAncestor(
                                                                                // this
                                                                                // );
        Frame owner = w instanceof Frame ? (Frame) w : null;

        // modal
        // Frame owner, String title, boolean modal, Component comp, boolean
        // resizable, boolean visible, boolean center ) {
        SwingUtil.add2Dialog(owner, "Select Strategy ..", true, listSelection,
                true, true);

        if (listSelection.getResult() != ListSelection.OK_OPTION)
            return null;
        return (StrategyGroup) listSelection.getSelectedValue();

    }

}