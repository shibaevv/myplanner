<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.0" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
  <Properties>
    <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
      <Dimension value="[400, 250]"/>
    </Property>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,44,0,0,1,-112"/>
  </SyntheticProperties>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
  <SubComponents>
    <Component class="com.klg.jclass.chart.beans.SimpleChart" name="chart1">
      <Properties>
        <Property name="legendVisible" type="boolean" value="true"/>
        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
          <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
            <TitledBorder title="Asset Allocation"/>
          </Border>
        </Property>
        <Property name="view3D" type="java.lang.String" value="10,25,25"/>
        <Property name="chartType" type="int" value="11"/>
        <Property name="xAxisAnnotationMethod" type="int" value="1"/>
        <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="ff" type="rgb"/>
        </Property>
      </Properties>

      <AuxValues>
        <AuxValue name="JavaCodeGenerator_CreateCodeCustom" type="java.lang.String" value="new com.klg.jclass.chart.beans.SimpleChart() {&#xa;    public void paintComponent(Graphics g) {&#xa;        &#xa;        //System.out.println(&quot;!!!!!!!!!!!!!!!!!REQUEST TO paintComponent!!!!!!!!!!!!!!!!!!!\n&quot; + g);&#xa;        &#xa;        if ( g instanceof Graphics2D ) {&#xa;            Graphics2D g2 = (Graphics2D) g; &#xa;&#xa;            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, antiAlias);&#xa;&#xa;            g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_OFF ); &#xa;&#xa;            //g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_SPEED);&#xa;&#xa;            //g2.setRenderingHint(RenderingHints.KEY_COLOR_RENDERING, RenderingHints.VALUE_COLOR_RENDER_QUALITY ); &#xa;&#xa;            //g2.setRenderingHint(RenderingHints.KEY_DITHERING, RenderingHints.VALUE_DITHER_ENABLE ); &#xa;&#xa;            //g2.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON ); &#xa;            &#xa;        }&#xa;        &#xa;        super.paintComponent(g);  //paint background&#xa;&#xa;    }&#xa;&#xa;};"/>
      </AuxValues>
    </Component>
  </SubComponents>
</Form>
