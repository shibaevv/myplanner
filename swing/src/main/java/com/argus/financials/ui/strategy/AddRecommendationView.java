/*
 * ModelSelectionView.java
 *
 * Created on July 9, 2002, 5:07 PM
 */

package com.argus.financials.ui.strategy;

import com.argus.financials.api.code.FinancialClassID;
import com.argus.financials.service.PersonService;
import com.argus.financials.swing.SwingUtil;
import com.argus.financials.ui.AbstractPanel;
import com.argus.format.LimitedPlainDocument;
import com.argus.util.ReferenceCode;

public class AddRecommendationView
    extends AbstractPanel
    implements FinancialClassID
{

    public static final int CANCEL_OPTION = javax.swing.JOptionPane.CANCEL_OPTION;

    public static final int OK_OPTION = javax.swing.JOptionPane.OK_OPTION;

    private static AddRecommendationView view;

    private int result; // CANCEL_OPTION, OK_OPTION

    /** Creates new form ModelSelectionView */
    public AddRecommendationView() {
        initComponents();
        initComponents2();
    }

    public static boolean exists() {
        return view != null;
    }

    public static AddRecommendationView getInstance() {
        if (view == null)
            view = new AddRecommendationView();
        return view;
    }

    public String getDefaultTitle() {
        return "Select new Recommendation/Financial type";
    }

    private void initComponents2() {
        jTextFieldDescription.setDocument(new LimitedPlainDocument(64));

        jTextFieldDescription.getDocument().addDocumentListener(
                new javax.swing.event.DocumentListener() {
                    public void removeUpdate(
                            javax.swing.event.DocumentEvent documentEvent) {
                        // System.out.println( "removeUpdate: " );
                        jButtonOK.setEnabled(documentEvent.getDocument()
                                .getLength() > 0);
                    }

                    public void insertUpdate(
                            javax.swing.event.DocumentEvent documentEvent) {
                        // System.out.println( "insertUpdate: " );
                        jButtonOK.setEnabled(documentEvent.getDocument()
                                .getLength() > 0);
                    }

                    public void changedUpdate(
                            javax.swing.event.DocumentEvent documentEvent) {
                        // System.out.println( "changedUpdate: " );
                        // we won't ever get this with a PlainDocument
                        // Plain text components don't fire this event
                    }

                    private String getValue(javax.swing.text.Document doc)
                            throws javax.swing.text.BadLocationException {
                        return doc.getText(doc.getStartPosition().getOffset(),
                                doc.getEndPosition().getOffset());
                    }

                }

        );

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {// GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelSelection = new javax.swing.JPanel();
        jLabelDescription = new javax.swing.JLabel();
        jLabelFinancialTypes = new javax.swing.JLabel();
        jTextFieldDescription = new javax.swing.JTextField();
        jComboBoxFinancialTypes = new javax.swing.JComboBox();
        jPanelControls = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanelSelection.setLayout(new java.awt.GridBagLayout());

        jPanelSelection.setBorder(new javax.swing.border.EtchedBorder());
        jLabelDescription.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelSelection.add(jLabelDescription, gridBagConstraints);

        jLabelFinancialTypes.setText("Financial Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelSelection.add(jLabelFinancialTypes, gridBagConstraints);

        jTextFieldDescription.setPreferredSize(new java.awt.Dimension(250, 19));
        jTextFieldDescription.setMinimumSize(new java.awt.Dimension(250, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanelSelection.add(jTextFieldDescription, gridBagConstraints);

        jComboBoxFinancialTypes
                .addItemListener(new java.awt.event.ItemListener() {
                    public void itemStateChanged(java.awt.event.ItemEvent evt) {
                        jComboBoxFinancialTypesItemStateChanged(evt);
                    }
                });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanelSelection.add(jComboBoxFinancialTypes, gridBagConstraints);

        add(jPanelSelection);

        jButtonOK.setText("OK");
        jButtonOK.setDefaultCapable(false);
        jButtonOK.setEnabled(false);
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jPanelControls.add(jButtonOK);

        jButtonCancel.setText("Cancel");
        jButtonCancel.setDefaultCapable(false);
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanelControls.add(jButtonCancel);

        add(jPanelControls);

    }// GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_formComponentShown
        result = CANCEL_OPTION;
    }// GEN-LAST:event_formComponentShown

    private void jComboBoxFinancialTypesItemStateChanged(
            java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBoxFinancialTypesItemStateChanged
        // jComboBoxProjections.setSelectedItem( ReferenceCode.CODE_NONE );
        // JComboBox cb = (JComboBox) evt.getSource();
        // if ( !SwingUtils.isFocusOwner(cb) ) return;

        Object item = evt.getItem();
        jTextFieldDescription.setText(item.toString());
        jButtonOK.setEnabled(item != ReferenceCode.CODE_NONE);
    }// GEN-LAST:event_jComboBoxFinancialTypesItemStateChanged

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonCancelActionPerformed
        SwingUtil.setVisible(this, false);
        result = CANCEL_OPTION; // by default
    }// GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonOKActionPerformed
        SwingUtil.setVisible(this, false);
        result = OK_OPTION;
    }// GEN-LAST:event_jButtonOKActionPerformed

    public static AddRecommendationView display(boolean recommendation) {

        boolean exists = exists();

        AddRecommendationView view = getInstance();
        if (!exists)
            SwingUtil.add2Dialog(null, view.getDefaultTitle(), true, view,
                    false);

        try {
            view.updateView(recommendation);
        } catch (com.argus.financials.api.ServiceException e) {
            e.printStackTrace(System.err);
            return null;
        }

        SwingUtil.pack(view);
        SwingUtil.setVisible(view, true); // modal

        return view;

    }

    private void close() {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;

    private javax.swing.JLabel jLabelFinancialTypes;

    private javax.swing.JPanel jPanelSelection;

    private javax.swing.JPanel jPanelControls;

    private javax.swing.JButton jButtonOK;

    private javax.swing.JComboBox jComboBoxFinancialTypes;

    private javax.swing.JLabel jLabelDescription;

    private javax.swing.JTextField jTextFieldDescription;

    // End of variables declaration//GEN-END:variables

    public int getResult() {
        return result;
    }

    public ReferenceCode getItem() {
        String desc = jTextFieldDescription.getText();
        ReferenceCode refCode = (ReferenceCode) jComboBoxFinancialTypes
                .getSelectedItem(); // Financial Type

        return new ReferenceCode(refCode.getId(), refCode.getCode(), desc);

    }

    public void updateView(boolean recommendation)
            throws com.argus.financials.api.ServiceException {

        SwingUtil.setTitle(this, recommendation ? "Select new Recommendation"
                : "Select new Financial type");

        jTextFieldDescription.setVisible(recommendation);
        jLabelDescription.setVisible(recommendation);

        jComboBoxFinancialTypes.setVisible(!recommendation);
        jLabelFinancialTypes.setVisible(!recommendation);

        PersonService person = clientService;
        if (person == null)
            return;

        Object[] items = new Object[] { ReferenceCode.CODE_NONE, RC_ASSET_CASH,
                RC_ASSET_INVESTMENT, RC_ASSET_PERSONAL,
                RC_ASSET_SUPERANNUATION, RC_INCOME_STREAM, RC_LIABILITY,
        // RC_REGULAR_INCOME,
        // RC_REGULAR_EXPENSE,
        // RC_TAX_OFFSET,
        };
        jComboBoxFinancialTypes.setModel(new javax.swing.DefaultComboBoxModel(
                items));

        jComboBoxFinancialTypes.setSelectedIndex(0);
        jTextFieldDescription.setText(null);

        result = CANCEL_OPTION;

    }

}
