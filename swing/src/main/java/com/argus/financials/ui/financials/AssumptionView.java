/*
 * AssumptionView.java
 *
 * Created on 5 December 2002, 08:55
 */

package com.argus.financials.ui.financials;

/**
 * 
 * @author valeri chibaev
 */

import java.text.MessageFormat;

import com.argus.financials.api.bean.IPerson;
import com.argus.financials.bean.Assumptions;
import com.argus.financials.bean.FinancialGoal;
import com.argus.financials.code.InvestmentStrategyCode;
import com.argus.financials.code.TableDisplayMode;
import com.argus.financials.etc.GrowthRate;
import com.argus.financials.service.ClientService;
import com.argus.financials.service.PersonService;
import com.argus.financials.swing.CurrencyInputVerifier;
import com.argus.financials.swing.DateInputVerifier;
import com.argus.financials.swing.IntegerInputVerifier;
import com.argus.financials.swing.PercentInputVerifier;
import com.argus.financials.ui.AbstractPanel;
import com.argus.util.DateTimeUtils;

public class AssumptionView
    extends AbstractPanel
    implements javax.swing.event.ChangeListener
{

    private static final com.argus.math.Percent percent = new com.argus.math.Percent();

    private static final com.argus.math.Money money = new com.argus.math.Money();

    private static final com.argus.math.Decimal decimal = new com.argus.math.Decimal();

    private static final MessageFormat mfAgeAtRetirement = new MessageFormat(
            "Age at retirement {0,number,integer} ( {1,number,integer} year(s) left ).");

    private Assumptions assumptions;

    /** Creates new form AssumptionView */
    public AssumptionView(Assumptions assumptions) {
        this.assumptions = assumptions;

        initComponents();

        jPanelClientDetails.setVisible(false);
        jPanelPartnerDetails.setVisible(false);

        // stateChanged( new javax.swing.event.ChangeEvent( this.assumptions )
        // );

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {// GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabelYears2Project = new javax.swing.JLabel();
        jTextFieldYears2Project = new javax.swing.JTextField();
        jLabelClient = new javax.swing.JLabel();
        jTextFieldClient = new javax.swing.JTextField();
        jLabelPartner = new javax.swing.JLabel();
        jTextFieldPartner = new javax.swing.JTextField();
        jLabelInflation = new javax.swing.JLabel();
        jTextFieldInflation = new javax.swing.JTextField();
        jLabelRetirementDate = new javax.swing.JLabel();
        jTextFieldRetirementDate = new com.argus.bean.FDateChooser();
        jLabelRetirementIncome = new javax.swing.JLabel();
        jTextFieldRetirementIncome = new javax.swing.JTextField();
        jLabelLumpSumRequired = new javax.swing.JLabel();
        jTextFieldLumpSumRequired = new javax.swing.JTextField();
        jLabelStrategyAfter = new javax.swing.JLabel();
        jComboBoxStrategyAfter = new javax.swing.JComboBox(
                new InvestmentStrategyCode().getCodeDescriptions());
        jLabelIncomeRateAfter = new javax.swing.JLabel();
        jTextFieldIncomeRateAfter = new javax.swing.JTextField();
        jLabelGrowthRateAfter = new javax.swing.JLabel();
        jTextFieldGrowthRateAfter = new javax.swing.JTextField();
        jLabelRepayDebt = new javax.swing.JLabel();
        jCheckBoxRepayDebt = new javax.swing.JCheckBox();
        jLabelDisplay = new javax.swing.JLabel();
        jComboBoxDisplay = new javax.swing.JComboBox(TableDisplayMode
                .getDisplayModes());
        jComboBoxDisplay.setSelectedIndex(0);
        jLabelDisplayRetirement = new javax.swing.JLabel();
        jComboBoxDisplayRetirement = new javax.swing.JComboBox(TableDisplayMode
                .getDisplayModes());
        jComboBoxDisplayRetirement.setSelectedIndex(0);
        jLabelLumpSumRequired2 = new javax.swing.JLabel();
        jTextFieldLumpSumRequired2 = new javax.swing.JTextField();
        jLabelRetirementIncome2 = new javax.swing.JLabel();
        jTextFieldRetirementIncome2 = new javax.swing.JTextField();
        jLabelAgeAtRetirement = new javax.swing.JLabel();
        jLabelShowTerm = new javax.swing.JLabel();
        jLabelShowLifeExpectancy = new javax.swing.JLabel();
        jComboBoxShowTerm = new javax.swing.JComboBox();
        jCheckBoxLifeExpectancy = new javax.swing.JCheckBox();
        jPanelClientDetails = new javax.swing.JPanel();
        jLabelSpacer = new javax.swing.JLabel();
        jLabelHospitalCover = new javax.swing.JLabel();
        jLabelDependents = new javax.swing.JLabel();
        jLabelPartnerIncome = new javax.swing.JLabel();
        jLabelAge = new javax.swing.JLabel();
        jCheckBoxHospitalCover = new javax.swing.JCheckBox();
        jTextFieldMaritalStatus = new javax.swing.JTextField();
        jTextFieldDependents = new javax.swing.JTextField();
        jTextFieldSpouseIncome = new javax.swing.JTextField();
        jTextFieldAge = new javax.swing.JTextField();
        jLabelMaritalStatus = new javax.swing.JLabel();
        jPanelPartnerDetails = new javax.swing.JPanel();
        jLabelSpacer1 = new javax.swing.JLabel();
        jLabelHospitalCover1 = new javax.swing.JLabel();
        jLabelDependents1 = new javax.swing.JLabel();
        jLabelPartnerIncome1 = new javax.swing.JLabel();
        jLabelAge1 = new javax.swing.JLabel();
        jCheckBoxHospitalCover1 = new javax.swing.JCheckBox();
        jTextFieldMaritalStatus1 = new javax.swing.JTextField();
        jTextFieldDependents1 = new javax.swing.JTextField();
        jTextFieldSpouseIncome1 = new javax.swing.JTextField();
        jTextFieldAge1 = new javax.swing.JTextField();
        jLabelMaritalStatus1 = new javax.swing.JLabel();
        jLabelSpace = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10,
                10, 10, 10)));
        setPreferredSize(new java.awt.Dimension(100, 10));
        setMinimumSize(new java.awt.Dimension(100, 10));
        jLabelYears2Project.setText("Years to Project");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabelYears2Project, gridBagConstraints);

        jTextFieldYears2Project
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldYears2Project
                .setPreferredSize(new java.awt.Dimension(90, 21));
        jTextFieldYears2Project.setInputVerifier(IntegerInputVerifier
                .getInstance());
        jTextFieldYears2Project.setMinimumSize(new java.awt.Dimension(90, 21));
        jTextFieldYears2Project
                .addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusLost(java.awt.event.FocusEvent evt) {
                        jTextFieldYears2ProjectFocusLost(evt);
                    }
                });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jTextFieldYears2Project, gridBagConstraints);

        jLabelClient.setText("ClientView");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabelClient, gridBagConstraints);

        jTextFieldClient.setEditable(false);
        jTextFieldClient.setPreferredSize(new java.awt.Dimension(130, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        add(jTextFieldClient, gridBagConstraints);

        jLabelPartner.setText("Partner");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabelPartner, gridBagConstraints);

        jTextFieldPartner.setEditable(false);
        jTextFieldPartner.setPreferredSize(new java.awt.Dimension(130, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        add(jTextFieldPartner, gridBagConstraints);

        jLabelInflation.setText("Long Term Inflation Forecast");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(jLabelInflation, gridBagConstraints);

        jTextFieldInflation
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldInflation
                .setInputVerifier(PercentInputVerifier.getInstance());
        jTextFieldInflation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldInflationFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jTextFieldInflation, gridBagConstraints);

        jLabelRetirementDate.setText("Retirement Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(jLabelRetirementDate, gridBagConstraints);

        jTextFieldRetirementDate.setInputVerifier(DateInputVerifier
                .getInstance());
        jTextFieldRetirementDate
                .addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusLost(java.awt.event.FocusEvent evt) {
                        jTextFieldRetirementDateFocusLost(evt);
                    }
                });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jTextFieldRetirementDate, gridBagConstraints);

        jLabelRetirementIncome.setText("Retirement Income");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabelRetirementIncome, gridBagConstraints);

        jTextFieldRetirementIncome
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldRetirementIncome.setInputVerifier(CurrencyInputVerifier
                .getInstance());
        jTextFieldRetirementIncome
                .addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusLost(java.awt.event.FocusEvent evt) {
                        jTextFieldRetirementIncomeFocusLost(evt);
                    }
                });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jTextFieldRetirementIncome, gridBagConstraints);

        jLabelLumpSumRequired.setText("Lump Sum Required");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabelLumpSumRequired, gridBagConstraints);

        jTextFieldLumpSumRequired
                .setToolTipText("Lump Sum Required at Retirement");
        jTextFieldLumpSumRequired
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldLumpSumRequired.setInputVerifier(CurrencyInputVerifier
                .getInstance());
        jTextFieldLumpSumRequired
                .addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusLost(java.awt.event.FocusEvent evt) {
                        jTextFieldLumpSumRequiredFocusLost(evt);
                    }
                });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jTextFieldLumpSumRequired, gridBagConstraints);

        jLabelStrategyAfter.setText("Investment Strategy for Retirement");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(jLabelStrategyAfter, gridBagConstraints);

        jComboBoxStrategyAfter.setToolTipText("Strategy After Retirement");
        jComboBoxStrategyAfter
                .addItemListener(new java.awt.event.ItemListener() {
                    public void itemStateChanged(java.awt.event.ItemEvent evt) {
                        jComboBoxStrategyAfterItemStateChanged(evt);
                    }
                });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jComboBoxStrategyAfter, gridBagConstraints);

        jLabelIncomeRateAfter.setText("Income Rate %");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabelIncomeRateAfter, gridBagConstraints);

        jTextFieldIncomeRateAfter.setEditable(false);
        jTextFieldIncomeRateAfter
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldIncomeRateAfter.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jTextFieldIncomeRateAfter, gridBagConstraints);

        jLabelGrowthRateAfter.setText("Growth Rate %");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabelGrowthRateAfter, gridBagConstraints);

        jTextFieldGrowthRateAfter.setEditable(false);
        jTextFieldGrowthRateAfter
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldGrowthRateAfter.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jTextFieldGrowthRateAfter, gridBagConstraints);

        jLabelRepayDebt.setText("Repay all debts at retirement");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 5);
        add(jLabelRepayDebt, gridBagConstraints);

        jCheckBoxRepayDebt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxRepayDebtItemStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(jCheckBoxRepayDebt, gridBagConstraints);

        jLabelDisplay.setText("Display Wealth table");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(jLabelDisplay, gridBagConstraints);

        jComboBoxDisplay.setToolTipText("Strategy After Retirement");
        jComboBoxDisplay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxDisplayItemStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jComboBoxDisplay, gridBagConstraints);

        jLabelDisplayRetirement.setText("Display Retirement table");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(jLabelDisplayRetirement, gridBagConstraints);

        jComboBoxDisplayRetirement.setToolTipText("Strategy After Retirement");
        jComboBoxDisplayRetirement
                .addItemListener(new java.awt.event.ItemListener() {
                    public void itemStateChanged(java.awt.event.ItemEvent evt) {
                        jComboBoxDisplayRetirementItemStateChanged(evt);
                    }
                });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jComboBoxDisplayRetirement, gridBagConstraints);

        jLabelLumpSumRequired2.setText(", at retirement");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(jLabelLumpSumRequired2, gridBagConstraints);

        jTextFieldLumpSumRequired2
                .setToolTipText("Lump Sum Required at Retirement");
        jTextFieldLumpSumRequired2.setEditable(false);
        jTextFieldLumpSumRequired2
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldLumpSumRequired2.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jTextFieldLumpSumRequired2, gridBagConstraints);

        jLabelRetirementIncome2.setText(", at retirement");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(jLabelRetirementIncome2, gridBagConstraints);

        jTextFieldRetirementIncome2
                .setToolTipText("Lump Sum Required at Retirement");
        jTextFieldRetirementIncome2.setEditable(false);
        jTextFieldRetirementIncome2
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldRetirementIncome2.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jTextFieldRetirementIncome2, gridBagConstraints);

        jLabelAgeAtRetirement
                .setText("Age at retirement {0,number,integer} ( {1,number,integer} year(s) left ).");
        jLabelAgeAtRetirement
                .setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jLabelAgeAtRetirement, gridBagConstraints);

        jLabelShowTerm.setText("Show Term as");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(jLabelShowTerm, gridBagConstraints);

        jLabelShowLifeExpectancy.setText("Show Life Expectancy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(jLabelShowLifeExpectancy, gridBagConstraints);

        jComboBoxShowTerm.setModel(new javax.swing.DefaultComboBoxModel(
                new String[] { "Age", "Years" }));
        jComboBoxShowTerm.setToolTipText("Show Term options");
        jComboBoxShowTerm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxShowTermItemStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jComboBoxShowTerm, gridBagConstraints);

        jCheckBoxLifeExpectancy
                .addItemListener(new java.awt.event.ItemListener() {
                    public void itemStateChanged(java.awt.event.ItemEvent evt) {
                        jCheckBoxLifeExpectancyItemStateChanged(evt);
                    }
                });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(jCheckBoxLifeExpectancy, gridBagConstraints);

        jPanelClientDetails.setLayout(new java.awt.GridBagLayout());

        jPanelClientDetails.setBorder(new javax.swing.border.EmptyBorder(
                new java.awt.Insets(1, 1, 5, 1)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanelClientDetails.add(jLabelSpacer, gridBagConstraints);

        jLabelHospitalCover.setText("Hospital Cover");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelClientDetails.add(jLabelHospitalCover, gridBagConstraints);

        jLabelDependents.setText("Dependents");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelClientDetails.add(jLabelDependents, gridBagConstraints);

        jLabelPartnerIncome.setText("Spouse Income");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelClientDetails.add(jLabelPartnerIncome, gridBagConstraints);

        jLabelAge.setText("Age");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelClientDetails.add(jLabelAge, gridBagConstraints);

        jCheckBoxHospitalCover
                .setPreferredSize(new java.awt.Dimension(100, 21));
        jCheckBoxHospitalCover.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelClientDetails.add(jCheckBoxHospitalCover, gridBagConstraints);

        jTextFieldMaritalStatus.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelClientDetails.add(jTextFieldMaritalStatus, gridBagConstraints);

        jTextFieldDependents.setEditable(false);
        jTextFieldDependents
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelClientDetails.add(jTextFieldDependents, gridBagConstraints);

        jTextFieldSpouseIncome.setEditable(false);
        jTextFieldSpouseIncome
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldSpouseIncome.setInputVerifier(CurrencyInputVerifier
                .getInstance());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelClientDetails.add(jTextFieldSpouseIncome, gridBagConstraints);

        jTextFieldAge.setEditable(false);
        jTextFieldAge.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelClientDetails.add(jTextFieldAge, gridBagConstraints);

        jLabelMaritalStatus.setText("Marital Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelClientDetails.add(jLabelMaritalStatus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jPanelClientDetails, gridBagConstraints);

        jPanelPartnerDetails.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanelPartnerDetails.add(jLabelSpacer1, gridBagConstraints);

        jLabelHospitalCover1.setText("Hospital Cover");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelPartnerDetails.add(jLabelHospitalCover1, gridBagConstraints);

        jLabelDependents1.setText("Dependents");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelPartnerDetails.add(jLabelDependents1, gridBagConstraints);

        jLabelPartnerIncome1.setText("Spouse Income");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelPartnerDetails.add(jLabelPartnerIncome1, gridBagConstraints);

        jLabelAge1.setText("Age");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelPartnerDetails.add(jLabelAge1, gridBagConstraints);

        jCheckBoxHospitalCover1
                .setPreferredSize(new java.awt.Dimension(100, 21));
        jCheckBoxHospitalCover1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelPartnerDetails.add(jCheckBoxHospitalCover1, gridBagConstraints);

        jTextFieldMaritalStatus1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelPartnerDetails.add(jTextFieldMaritalStatus1, gridBagConstraints);

        jTextFieldDependents1.setEditable(false);
        jTextFieldDependents1
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelPartnerDetails.add(jTextFieldDependents1, gridBagConstraints);

        jTextFieldSpouseIncome1.setEditable(false);
        jTextFieldSpouseIncome1
                .setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldSpouseIncome1.setInputVerifier(CurrencyInputVerifier
                .getInstance());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelPartnerDetails.add(jTextFieldSpouseIncome1, gridBagConstraints);

        jTextFieldAge1.setEditable(false);
        jTextFieldAge1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelPartnerDetails.add(jTextFieldAge1, gridBagConstraints);

        jLabelMaritalStatus1.setText("Marital Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelPartnerDetails.add(jLabelMaritalStatus1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jPanelPartnerDetails, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        add(jLabelSpace, gridBagConstraints);

    }// GEN-END:initComponents

    private void jComboBoxShowTermItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBoxShowTermItemStateChanged
        if (evt.getSource() == jComboBoxShowTerm)
            updateShowTermMode();
    }// GEN-LAST:event_jComboBoxShowTermItemStateChanged

    private void jCheckBoxLifeExpectancyItemStateChanged(
            java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jCheckBoxLifeExpectancyItemStateChanged
        if (evt.getSource() == jCheckBoxLifeExpectancy)
            updateLifeExpectancyMode();
    }// GEN-LAST:event_jCheckBoxLifeExpectancyItemStateChanged

    private void jComboBoxDisplayRetirementItemStateChanged(
            java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBoxDisplayRetirementItemStateChanged
        if (evt.getSource() == jComboBoxDisplayRetirement)
            updateDisplayModeRetirement();
    }// GEN-LAST:event_jComboBoxDisplayRetirementItemStateChanged

    private void jComboBoxDisplayItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBoxDisplayItemStateChanged
        if (evt.getSource() == jComboBoxDisplay)
            updateDisplayMode();
    }// GEN-LAST:event_jComboBoxDisplayItemStateChanged

    private void jTextFieldYears2ProjectFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jTextFieldYears2ProjectFocusLost
        if (evt.getSource() == jTextFieldYears2Project)
            updateYearsToProject();
    }// GEN-LAST:event_jTextFieldYears2ProjectFocusLost

    private void jCheckBoxRepayDebtItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jCheckBoxRepayDebtItemStateChanged
        if (evt.getSource() == jCheckBoxRepayDebt)
            setDebtRepayment();
    }// GEN-LAST:event_jCheckBoxRepayDebtItemStateChanged

    private void jTextFieldLumpSumRequiredFocusLost(
            java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jTextFieldLumpSumRequiredFocusLost
        if (evt.getSource() == jTextFieldLumpSumRequired)
            updateLumpSumRequired();
    }// GEN-LAST:event_jTextFieldLumpSumRequiredFocusLost

    private void jTextFieldRetirementIncomeFocusLost(
            java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jTextFieldRetirementIncomeFocusLost
        if (evt.getSource() == jTextFieldRetirementIncome)
            updateRetirementIncome();
    }// GEN-LAST:event_jTextFieldRetirementIncomeFocusLost

    private void jTextFieldRetirementDateFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jTextFieldRetirementDateFocusLost
    // System.out.println( "jTextFieldRetirementDateFocusLost()" );
    // System.out.println( evt.getSource() );
    // System.out.println( jTextFieldRetirementDate );
        // if ( evt.getSource() == jTextFieldRetirementDate )
        updateRetirementDate();
    }// GEN-LAST:event_jTextFieldRetirementDateFocusLost

    private void jTextFieldInflationFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jTextFieldInflationFocusLost
        if (evt.getSource() == jTextFieldInflation)
            updateInflation();
    }// GEN-LAST:event_jTextFieldInflationFocusLost

    private void jComboBoxStrategyAfterItemStateChanged(
            java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBoxStrategyAfterItemStateChanged
        if (evt.getSource() == jComboBoxStrategyAfter)
            updateStrategy();
    }// GEN-LAST:event_jComboBoxStrategyAfterItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelAgeAtRetirement;

    private javax.swing.JTextField jTextFieldDependents;

    private javax.swing.JLabel jLabelDisplayRetirement;

    private javax.swing.JLabel jLabelClient;

    private javax.swing.JLabel jLabelMaritalStatus;

    private com.argus.bean.FDateChooser jTextFieldRetirementDate;

    private javax.swing.JPanel jPanelPartnerDetails;

    private javax.swing.JComboBox jComboBoxDisplayRetirement;

    private javax.swing.JTextField jTextFieldDependents1;

    private javax.swing.JLabel jLabelYears2Project;

    private javax.swing.JTextField jTextFieldYears2Project;

    private javax.swing.JLabel jLabelRetirementIncome;

    private javax.swing.JLabel jLabelGrowthRateAfter;

    private javax.swing.JLabel jLabelSpacer1;

    private javax.swing.JLabel jLabelIncomeRateAfter;

    private javax.swing.JLabel jLabelPartnerIncome;

    private javax.swing.JCheckBox jCheckBoxLifeExpectancy;

    private javax.swing.JTextField jTextFieldIncomeRateAfter;

    private javax.swing.JTextField jTextFieldSpouseIncome1;

    private javax.swing.JLabel jLabelPartnerIncome1;

    private javax.swing.JTextField jTextFieldAge1;

    private javax.swing.JLabel jLabelRetirementDate;

    private javax.swing.JLabel jLabelDependents1;

    private javax.swing.JLabel jLabelRetirementIncome2;

    private javax.swing.JLabel jLabelPartner;

    private javax.swing.JComboBox jComboBoxStrategyAfter;

    private javax.swing.JLabel jLabelLumpSumRequired;

    private javax.swing.JTextField jTextFieldMaritalStatus;

    private javax.swing.JTextField jTextFieldRetirementIncome;

    private javax.swing.JTextField jTextFieldMaritalStatus1;

    private javax.swing.JTextField jTextFieldLumpSumRequired2;

    private javax.swing.JCheckBox jCheckBoxHospitalCover1;

    private javax.swing.JLabel jLabelAge;

    private javax.swing.JComboBox jComboBoxShowTerm;

    private javax.swing.JLabel jLabelShowLifeExpectancy;

    private javax.swing.JTextField jTextFieldGrowthRateAfter;

    private javax.swing.JLabel jLabelInflation;

    private javax.swing.JComboBox jComboBoxDisplay;

    private javax.swing.JCheckBox jCheckBoxHospitalCover;

    private javax.swing.JPanel jPanelClientDetails;

    private javax.swing.JTextField jTextFieldClient;

    private javax.swing.JLabel jLabelDisplay;

    private javax.swing.JTextField jTextFieldPartner;

    private javax.swing.JTextField jTextFieldAge;

    private javax.swing.JTextField jTextFieldRetirementIncome2;

    private javax.swing.JLabel jLabelMaritalStatus1;

    private javax.swing.JLabel jLabelSpacer;

    private javax.swing.JLabel jLabelRepayDebt;

    private javax.swing.JLabel jLabelShowTerm;

    private javax.swing.JTextField jTextFieldLumpSumRequired;

    private javax.swing.JTextField jTextFieldSpouseIncome;

    private javax.swing.JTextField jTextFieldInflation;

    private javax.swing.JLabel jLabelAge1;

    private javax.swing.JLabel jLabelStrategyAfter;

    private javax.swing.JLabel jLabelLumpSumRequired2;

    private javax.swing.JLabel jLabelSpace;

    private javax.swing.JLabel jLabelDependents;

    private javax.swing.JLabel jLabelHospitalCover;

    private javax.swing.JLabel jLabelHospitalCover1;

    private javax.swing.JCheckBox jCheckBoxRepayDebt;

    // End of variables declaration//GEN-END:variables

    /***************************************************************************
     * javax.swing.event.ChangeListener interface
     **************************************************************************/
    public void stateChanged(javax.swing.event.ChangeEvent changeEvent) {

        System.out.println("AssumptionsView::stateChanged() " + changeEvent);

        if (changeEvent.getSource() != assumptions)
            ; // throw ???

        // if ( !assumptions.isModified() )
        // return;

        jTextFieldClient.setText(assumptions.getClientName());
        jTextFieldPartner.setText(assumptions.getPartnerName());

        setRetirementDate(assumptions.getRetirementDate());
        jLabelAgeAtRetirement.setText(mfAgeAtRetirement.format(new Object[] {
                new Double(assumptions.getClientAgeAtRetirement()),
                new Double(assumptions.getYearsToRetirement()) }));

        setRetirementIncome(assumptions.getRetirementIncome());

        setLumpSumRequired(assumptions.getLumpSumRequired());

        jComboBoxStrategyAfter.setSelectedItem(assumptions
                .getInvestmentStrategyDesc());

        jCheckBoxRepayDebt.setSelected(assumptions.getDebtRepayment());

        setYearsToProject(assumptions.getYearsToProject());

        jComboBoxDisplay.setSelectedIndex(assumptions.getDisplayMode());

        setInflation(assumptions.getInflation());

        // client details
        jCheckBoxHospitalCover
                .setSelected(assumptions.getClientHospitalCover());
        jTextFieldMaritalStatus.setText(assumptions.getClientMaritalStatus());
        jTextFieldDependents.setText("" + assumptions.getClientDependents());
        jTextFieldSpouseIncome.setText(money.toString(assumptions
                .getPartnerIncome()));
        jTextFieldAge.setText("" + (int) assumptions.getClientAge());

        // partner details
        jCheckBoxHospitalCover1.setSelected(assumptions
                .getPartnerHospitalCover());
        jTextFieldMaritalStatus1.setText(assumptions.getPartnerMaritalStatus());
        jTextFieldDependents1.setText("" + assumptions.getPartnerDependents());
        jTextFieldSpouseIncome1.setText(money.toString(assumptions
                .getClientIncome()));
        jTextFieldAge1.setText("" + (int) assumptions.getPartnerAge());

    }

    /***************************************************************************
     * 
     **************************************************************************/
    public void saveView(PersonService person) throws com.argus.financials.api.ServiceException {
    }

    public void updateView() { // throws com.argus.financials.service.ServiceException {
        try {
            updateView(clientService);
        } catch (Exception e) {
            e.printStackTrace(System.err);
        }
    }

    public void updateView(PersonService person) throws com.argus.financials.api.ServiceException {

        IPerson personName = person.getPersonName();
        assumptions.setClientName(personName.getFullName());
        jTextFieldClient.setText(assumptions.getClientName());
        assumptions.setClientDOB(personName.getDateOfBirth());
        //
        if (person instanceof ClientService) {
            PersonService partner = ((ClientService) person).getPartner(false);
            if (partner != null) {
                IPerson partnerName = partner.getPersonName();
                assumptions.setPartnerName(partnerName.getFullName());
                jTextFieldPartner.setText(assumptions.getPartnerName());
                assumptions.setPartnerDOB(partnerName.getDateOfBirth());
            }
        }

        FinancialGoal fg = person.getFinancialGoal();

        java.math.BigDecimal d = fg == null ? null : fg.getInflation();
        setInflation(d == null ? 0. : d.doubleValue());

        setRetirementDate(fg == null ? null : fg.getTargetDate(personName
                .getDateOfBirth()));
        updateRetirementDate();

        setRetirementIncome(fg == null ? null : fg.getTargetIncome());

        d = fg == null ? null : fg.getLumpSumRequired();
        setLumpSumRequired(d == null ? 0. : d.doubleValue());

        jComboBoxStrategyAfter
                .setSelectedItem(fg == null ? InvestmentStrategyCode.NONE
                        : new InvestmentStrategyCode().getCodeDescription(fg
                                .getTargetStrategyID()));

        jCheckBoxRepayDebt.setSelected(getDebtRepayment());

        setYearsToProject(assumptions.getYearsToProject());
    }

    public Assumptions getAssumptions() {
        return assumptions;
    }

    /*
     * get/set
     */
    public double getInflation() {
        return assumptions.getInflation();
    }

    public void setInflation(double value) {
        jTextFieldInflation.setText(percent.toString(value));
        updateInflation();
    }

    public void setInflation(java.lang.Number value) {
        setInflation(value == null ? 0. : value.doubleValue());
    }

    private void updateInflation() {
        double value = money.doubleValue(jTextFieldInflation.getText());
        assumptions.setInflation(value);
        updateRetirementIncome();
        updateLumpSumRequired();
    }

    public java.util.Date getRetirementDate() {
        return DateTimeUtils.getDate(jTextFieldRetirementDate.getText());
    }

    public void setRetirementDate(java.util.Date value) {
        jTextFieldRetirementDate.setText(DateTimeUtils.asString(value));
    }

    private void updateRetirementDate() {
        updateRetirementDate(DateTimeUtils.getDate(jTextFieldRetirementDate
                .getText()));
    }

    private void updateRetirementDate(java.util.Date value) {
        assumptions.setRetirementDate(value);
        jLabelAgeAtRetirement.setText(mfAgeAtRetirement.format(new Object[] {
                new Double(assumptions.getClientAgeAtRetirement()),
                new Double(assumptions.getYearsToRetirement()) }));
        updateRetirementIncome();
        updateLumpSumRequired();
    }

    public double getRetirementIncome() {
        return assumptions.getRetirementIncome();
    }

    public void setRetirementIncome(double value) {
        jTextFieldRetirementIncome.setText(money.toString(value));
        updateRetirementIncome(value);
    }

    public void setRetirementIncome(java.lang.Number value) {
        setRetirementIncome(value == null ? 0. : value.doubleValue());
    }

    private void updateRetirementIncome() {
        updateRetirementIncome(money.doubleValue(jTextFieldRetirementIncome
                .getText()));
    }

    private void updateRetirementIncome(double value) {
        assumptions.setRetirementIncome(value);
        jTextFieldRetirementIncome2.setText(money.toString(assumptions
                .getRetirementIncomeAtRetirement()));
    }

    public double getLumpSumRequired() {
        return assumptions.getLumpSumRequired();
    }

    public void setLumpSumRequired(double value) {
        jTextFieldLumpSumRequired.setText(money.toString(value));
        updateLumpSumRequired();
    }

    public void setLumpSumRequired(java.lang.Number value) {
        setLumpSumRequired(value == null ? 0. : value.doubleValue());
    }

    private void updateLumpSumRequired() {
        double value = money.doubleValue(jTextFieldLumpSumRequired.getText());
        assumptions.setLumpSumRequired(value);
        jTextFieldLumpSumRequired2.setText(money.toString(assumptions
                .getLumpSumRequiredAtRetirement()));
    }

    public Integer getInvestmentStrategyID() {
        return new InvestmentStrategyCode()
                .getCodeID((String) jComboBoxStrategyAfter.getSelectedItem());
    }

    public void setInvestmentStrategyID(Integer value) {
        jComboBoxStrategyAfter.setSelectedItem(new InvestmentStrategyCode()
                .getCodeDescription(value));
    }

    public boolean getLifeExpectancy() {
        if (assumptions == null)
            return true;
        return assumptions.getLifeExpectancy();
    }

    public void setLifeExpectancy() {
        if (assumptions != null)
            assumptions.setLifeExpectancy(jCheckBoxLifeExpectancy.isSelected());
    }

    public boolean getDebtRepayment() {
        if (assumptions == null)
            return true;
        return assumptions.getDebtRepayment();
    }

    public void setDebtRepayment() {
        if (assumptions != null)
            assumptions.setDebtRepayment(jCheckBoxRepayDebt.isSelected());
    }

    public int getYearsToProject() {
        return assumptions.getYearsToProject();
    }

    public void setYearsToProject(int value) {
        jTextFieldYears2Project.setText(String.valueOf(value));
        updateYearsToProject();
    }

    public void updateYearsToProject() {

        try {
            // int value = (int) decimal.doubleValue(
            // jTextFieldYears2Project.getText() );
            int value = (int) Double.parseDouble(jTextFieldYears2Project
                    .getText());
            if (value < 0) {
                value = 0;
                jTextFieldYears2Project.setText("0");
            }
            assumptions.setYearsToProject(value);
        } catch (Exception e) {
            e.printStackTrace(System.err);
            jTextFieldYears2Project.setText("");
        }

    }

    public void updateShowTermMode() {
        assumptions.setShowTermMode(this.jComboBoxShowTerm.getSelectedIndex());
    }

    public void updateLifeExpectancyMode() {
        assumptions.setLifeExpectancy(jCheckBoxLifeExpectancy.isSelected());
    }

    public void updateDisplayMode() {
        assumptions.setDisplayMode(jComboBoxDisplay.getSelectedIndex());
    }

    public void updateDisplayModeRetirement() {
        assumptions.setDisplayModeRetirement(this.jComboBoxDisplayRetirement
                .getSelectedIndex());
    }

    private void updateStrategy() {
        InvestmentStrategyCode isc = new InvestmentStrategyCode();

        Integer id = isc.getCodeID(jComboBoxStrategyAfter.getSelectedItem()
                .toString());
        assumptions.setInvestmentStrategyID(id);
        if (id == null)
            return;

        GrowthRate gr = isc.getGrowthRate(id);
        if (gr == null)
            return;

        jTextFieldGrowthRateAfter.setText(percent.toString(gr.getGrowthRate()));
        jTextFieldIncomeRateAfter.setText(percent.toString(gr.getIncomeRate()));

    }

    public void changeViewForCashFlow() {
        jLabelRetirementIncome.setVisible(false);
        jTextFieldRetirementIncome.setVisible(false);
        jLabelLumpSumRequired.setVisible(false);
        jTextFieldLumpSumRequired.setVisible(false);
        jLabelStrategyAfter.setVisible(false);
        jComboBoxStrategyAfter.setVisible(false);
        jLabelIncomeRateAfter.setVisible(false);
        jTextFieldIncomeRateAfter.setVisible(false);
        jLabelGrowthRateAfter.setVisible(false);
        jTextFieldGrowthRateAfter.setVisible(false);
        jLabelRepayDebt.setVisible(false);
        jCheckBoxRepayDebt.setVisible(false);
        jLabelLumpSumRequired2.setVisible(false);
        jTextFieldLumpSumRequired2.setVisible(false);
        jLabelRetirementIncome2.setVisible(false);
        jTextFieldRetirementIncome2.setVisible(false);
        jComboBoxDisplayRetirement.setVisible(false);
        jLabelDisplayRetirement.setVisible(false);
        jCheckBoxLifeExpectancy.setVisible(false);
        jLabelShowLifeExpectancy.setVisible(false);
    }

    public void setTaxAnalysisView() {
        // hide all
        for (int i = 0; i < getComponentCount(); i++)
            getComponent(i).setVisible(false);

        // show required
        jLabelClient.setVisible(true);
        jTextFieldClient.setVisible(true);
        jLabelPartner.setVisible(true);
        jTextFieldPartner.setVisible(true);

        jPanelClientDetails.setVisible(true);
        jPanelPartnerDetails.setVisible(true);

        // lift all up
        jLabelSpace.setVisible(true);

    }

}
